{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport React, { useEffect, useState } from \"react\";\nimport data from \"../../assets/data/testdata.json.js\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function PostContent(_ref) {\n  var query = _ref.query;\n\n  var _useState = useState(JSON.parse(data)),\n      _useState2 = _slicedToArray(_useState, 2),\n      posts = _useState2[0],\n      setPosts = _useState2[1];\n\n  console.log(posts);\n  useEffect(function () {\n    console.log(query);\n    var newPost;\n\n    var filterquery = function filterquery(q) {\n      if (q.post.includes(query)) return true;else return false;\n    };\n\n    if (query.length > 0) {\n      newPost = JSON.parse(data).filter(filterquery);\n      setPosts(newPost);\n    }\n  }, [query]);\n  return _jsx(ScrollView, {\n    style: styles.postContainer,\n    contentContainerStyle: {\n      flexGrow: 1,\n      alignItems: \"center\"\n    },\n    children: posts.map(function (d, id) {\n      return _jsxs(View, {\n        style: styles.card,\n        children: [_jsxs(Text, {\n          style: styles.title,\n          children: [d.first_name, \" \", d.last_name]\n        }), _jsx(Text, {\n          style: styles.post,\n          children: d.post\n        })]\n      }, id);\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  postContainer: {\n    flex: 1,\n    flexDirection: \"row\",\n    width: \"100%\"\n  },\n  card: {\n    width: \"90%\",\n    backgroundColor: \"green\",\n    height: 80,\n    marginBottom: 20,\n    backgroundColor: \"#f8f8f8\",\n    borderRadius: 6,\n    shadowColor: \"#171717\",\n    shadowOffset: {\n      width: -2,\n      height: 4\n    },\n    shadowOpacity: 0.2,\n    shadowRadius: 3\n  },\n  title: {\n    color: \"#000\"\n  },\n  post: {\n    color: \"#000\",\n    opacity: 0.7\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","data","PostContent","query","JSON","parse","posts","setPosts","console","log","newPost","filterquery","q","post","includes","length","filter","styles","postContainer","flexGrow","alignItems","map","d","id","card","title","first_name","last_name","StyleSheet","create","flex","flexDirection","width","backgroundColor","height","marginBottom","borderRadius","shadowColor","shadowOffset","shadowOpacity","shadowRadius","color","opacity"],"sources":["/Users/allon/native/Tutorial/frontend/screens/home/PostContent.js"],"sourcesContent":["import { StyleSheet, Text, View, ScrollView } from \"react-native\";\nimport React, { useEffect, useState } from \"react\";\n\nimport data from \"../../assets/data/testdata.json.js\";\n\nexport default function PostContent({ query }) {\n  const [posts, setPosts] = useState(JSON.parse(data));\n  console.log(posts);\n\n  useEffect(() => {\n    console.log(query);\n    let newPost;\n    const filterquery = (q) => {\n      if (q.post.includes(query)) return true;\n      else return false;\n    };\n    if (query.length > 0) {\n      newPost = JSON.parse(data).filter(filterquery);\n      setPosts(newPost);\n    }\n  }, [query]);\n\n  return (\n    <ScrollView\n      style={styles.postContainer}\n      contentContainerStyle={{\n        flexGrow: 1,\n\n        alignItems: \"center\"\n      }}\n    >\n      {posts.map((d, id) => {\n        return (\n          <View key={id} style={styles.card}>\n            <Text style={styles.title}>\n              {d.first_name} {d.last_name}\n            </Text>\n            <Text style={styles.post}>{d.post}</Text>\n          </View>\n        );\n      })}\n    </ScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  postContainer: {\n    flex: 1,\n    flexDirection: \"row\",\n    width: \"100%\"\n  },\n  card: {\n    width: \"90%\",\n    backgroundColor: \"green\",\n    height: 80,\n    marginBottom: 20,\n    backgroundColor: \"#f8f8f8\",\n    borderRadius: 6,\n    shadowColor: \"#171717\",\n    shadowOffset: { width: -2, height: 4 },\n    shadowOpacity: 0.2,\n    shadowRadius: 3\n  },\n  title: {\n    color: \"#000\"\n  },\n  post: {\n    color: \"#000\",\n    opacity: 0.7\n  }\n});\n"],"mappings":";;;;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAOC,IAAP;;;AAEA,eAAe,SAASC,WAAT,OAAgC;EAAA,IAATC,KAAS,QAATA,KAAS;;EAC7C,gBAA0BH,QAAQ,CAACI,IAAI,CAACC,KAAL,CAAWJ,IAAX,CAAD,CAAlC;EAAA;EAAA,IAAOK,KAAP;EAAA,IAAcC,QAAd;;EACAC,OAAO,CAACC,GAAR,CAAYH,KAAZ;EAEAP,SAAS,CAAC,YAAM;IACdS,OAAO,CAACC,GAAR,CAAYN,KAAZ;IACA,IAAIO,OAAJ;;IACA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,CAAD,EAAO;MACzB,IAAIA,CAAC,CAACC,IAAF,CAAOC,QAAP,CAAgBX,KAAhB,CAAJ,EAA4B,OAAO,IAAP,CAA5B,KACK,OAAO,KAAP;IACN,CAHD;;IAIA,IAAIA,KAAK,CAACY,MAAN,GAAe,CAAnB,EAAsB;MACpBL,OAAO,GAAGN,IAAI,CAACC,KAAL,CAAWJ,IAAX,EAAiBe,MAAjB,CAAwBL,WAAxB,CAAV;MACAJ,QAAQ,CAACG,OAAD,CAAR;IACD;EACF,CAXQ,EAWN,CAACP,KAAD,CAXM,CAAT;EAaA,OACE,KAAC,UAAD;IACE,KAAK,EAAEc,MAAM,CAACC,aADhB;IAEE,qBAAqB,EAAE;MACrBC,QAAQ,EAAE,CADW;MAGrBC,UAAU,EAAE;IAHS,CAFzB;IAAA,UAQGd,KAAK,CAACe,GAAN,CAAU,UAACC,CAAD,EAAIC,EAAJ,EAAW;MACpB,OACE,MAAC,IAAD;QAAe,KAAK,EAAEN,MAAM,CAACO,IAA7B;QAAA,WACE,MAAC,IAAD;UAAM,KAAK,EAAEP,MAAM,CAACQ,KAApB;UAAA,WACGH,CAAC,CAACI,UADL,OACkBJ,CAAC,CAACK,SADpB;QAAA,EADF,EAIE,KAAC,IAAD;UAAM,KAAK,EAAEV,MAAM,CAACJ,IAApB;UAAA,UAA2BS,CAAC,CAACT;QAA7B,EAJF;MAAA,GAAWU,EAAX,CADF;IAQD,CATA;EARH,EADF;AAqBD;AAED,IAAMN,MAAM,GAAGW,UAAU,CAACC,MAAX,CAAkB;EAC/BX,aAAa,EAAE;IACbY,IAAI,EAAE,CADO;IAEbC,aAAa,EAAE,KAFF;IAGbC,KAAK,EAAE;EAHM,CADgB;EAM/BR,IAAI,EAAE;IACJQ,KAAK,EAAE,KADH;IAEJC,eAAe,EAAE,OAFb;IAGJC,MAAM,EAAE,EAHJ;IAIJC,YAAY,EAAE,EAJV;IAKJF,eAAe,EAAE,SALb;IAMJG,YAAY,EAAE,CANV;IAOJC,WAAW,EAAE,SAPT;IAQJC,YAAY,EAAE;MAAEN,KAAK,EAAE,CAAC,CAAV;MAAaE,MAAM,EAAE;IAArB,CARV;IASJK,aAAa,EAAE,GATX;IAUJC,YAAY,EAAE;EAVV,CANyB;EAkB/Bf,KAAK,EAAE;IACLgB,KAAK,EAAE;EADF,CAlBwB;EAqB/B5B,IAAI,EAAE;IACJ4B,KAAK,EAAE,MADH;IAEJC,OAAO,EAAE;EAFL;AArByB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}