{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport React from \"react\";\nimport RNPickerSelect from \"react-native-picker-select\";\nimport MaterialIcons from \"@expo/vector-icons/MaterialIcons\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function Picker(_ref) {\n  var width = _ref.width;\n  placeholder = {\n    label: \"Sort by\",\n    value: null,\n    color: \"#9EA0A4\"\n  };\n  return _jsx(RNPickerSelect, {\n    onValueChange: function onValueChange(value) {\n      return console.log(value);\n    },\n    useNativeAndroidPickerStyle: false,\n    items: [{\n      label: \"Recent\",\n      value: \"recent\"\n    }, {\n      label: \"Likes\",\n      value: \"likes\"\n    }, {\n      label: \"Comments\",\n      value: \"comments\"\n    }],\n    style: _objectSpread(_objectSpread({}, pickerSelectStyles), {}, {\n      placeholder: placeholder\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  picker: {\n    backgroundColor: \"white\"\n  }\n});\nvar pickerSelectStyles = StyleSheet.create({\n  inputIOS: {\n    fontSize: 16,\n    paddingVertical: 12,\n    paddingHorizontal: 10,\n    borderWidth: 1,\n    borderColor: \"gray\",\n    backgroundColor: \"#f8f8f8\",\n    width: \"30%\",\n    borderRadius: 4,\n    color: \"black\",\n    paddingRight: 30\n  },\n  inputAndroid: {\n    fontSize: 16,\n    paddingHorizontal: 10,\n    paddingVertical: 8,\n    borderWidth: 0.5,\n    borderColor: \"purple\",\n    borderRadius: 8,\n    color: \"black\",\n    paddingRight: 30\n  }\n});","map":{"version":3,"names":["React","RNPickerSelect","MaterialIcons","Picker","width","placeholder","label","value","color","console","log","pickerSelectStyles","styles","StyleSheet","create","picker","backgroundColor","inputIOS","fontSize","paddingVertical","paddingHorizontal","borderWidth","borderColor","borderRadius","paddingRight","inputAndroid"],"sources":["/Users/allon/native/Tutorial/frontend/screens/home/home-comp/Picker.js"],"sourcesContent":["import { StyleSheet } from \"react-native\";\nimport React from \"react\";\nimport RNPickerSelect from \"react-native-picker-select\";\nimport MaterialIcons from \"react-native-vector-icons/MaterialIcons\";\n\nexport default function Picker({ width }) {\n  placeholder = {\n    label: \"Sort by\",\n    value: null,\n    color: \"#9EA0A4\"\n  };\n  return (\n    <RNPickerSelect\n      onValueChange={(value) => console.log(value)}\n      useNativeAndroidPickerStyle={false}\n      items={[\n        { label: \"Recent\", value: \"recent\" },\n        { label: \"Likes\", value: \"likes\" },\n        { label: \"Comments\", value: \"comments\" }\n      ]}\n      //   Icon={() => {\n      //     return <MaterialIcons name=\"sort\" />;\n      //   }}\n      style={{\n        ...pickerSelectStyles,\n        placeholder\n      }}\n    />\n  );\n}\n\nconst styles = StyleSheet.create({\n  picker: {\n    backgroundColor: \"white\"\n  }\n});\nconst pickerSelectStyles = StyleSheet.create({\n  inputIOS: {\n    fontSize: 16,\n    paddingVertical: 12,\n    paddingHorizontal: 10,\n    borderWidth: 1,\n    borderColor: \"gray\",\n    backgroundColor: \"#f8f8f8\",\n    width: \"30%\",\n    borderRadius: 4,\n    color: \"black\",\n    paddingRight: 30 // to ensure the text is never behind the icon\n  },\n  inputAndroid: {\n    fontSize: 16,\n    paddingHorizontal: 10,\n    paddingVertical: 8,\n    borderWidth: 0.5,\n    borderColor: \"purple\",\n    borderRadius: 8,\n    color: \"black\",\n    paddingRight: 30 // to ensure the text is never behind the icon\n  }\n});\n"],"mappings":";;;;;;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AACA,OAAOC,aAAP;;AAEA,eAAe,SAASC,MAAT,OAA2B;EAAA,IAATC,KAAS,QAATA,KAAS;EACxCC,WAAW,GAAG;IACZC,KAAK,EAAE,SADK;IAEZC,KAAK,EAAE,IAFK;IAGZC,KAAK,EAAE;EAHK,CAAd;EAKA,OACE,KAAC,cAAD;IACE,aAAa,EAAE,uBAACD,KAAD;MAAA,OAAWE,OAAO,CAACC,GAAR,CAAYH,KAAZ,CAAX;IAAA,CADjB;IAEE,2BAA2B,EAAE,KAF/B;IAGE,KAAK,EAAE,CACL;MAAED,KAAK,EAAE,QAAT;MAAmBC,KAAK,EAAE;IAA1B,CADK,EAEL;MAAED,KAAK,EAAE,OAAT;MAAkBC,KAAK,EAAE;IAAzB,CAFK,EAGL;MAAED,KAAK,EAAE,UAAT;MAAqBC,KAAK,EAAE;IAA5B,CAHK,CAHT;IAWE,KAAK,kCACAI,kBADA;MAEHN,WAAW,EAAXA;IAFG;EAXP,EADF;AAkBD;AAED,IAAMO,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;EAC/BC,MAAM,EAAE;IACNC,eAAe,EAAE;EADX;AADuB,CAAlB,CAAf;AAKA,IAAML,kBAAkB,GAAGE,UAAU,CAACC,MAAX,CAAkB;EAC3CG,QAAQ,EAAE;IACRC,QAAQ,EAAE,EADF;IAERC,eAAe,EAAE,EAFT;IAGRC,iBAAiB,EAAE,EAHX;IAIRC,WAAW,EAAE,CAJL;IAKRC,WAAW,EAAE,MALL;IAMRN,eAAe,EAAE,SANT;IAORZ,KAAK,EAAE,KAPC;IAQRmB,YAAY,EAAE,CARN;IASRf,KAAK,EAAE,OATC;IAURgB,YAAY,EAAE;EAVN,CADiC;EAa3CC,YAAY,EAAE;IACZP,QAAQ,EAAE,EADE;IAEZE,iBAAiB,EAAE,EAFP;IAGZD,eAAe,EAAE,CAHL;IAIZE,WAAW,EAAE,GAJD;IAKZC,WAAW,EAAE,QALD;IAMZC,YAAY,EAAE,CANF;IAOZf,KAAK,EAAE,OAPK;IAQZgB,YAAY,EAAE;EARF;AAb6B,CAAlB,CAA3B"},"metadata":{},"sourceType":"module"}