{"ast":null,"code":"import { NavigationContainer } from \"@react-navigation/native\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport HomeScreen from \"./screens/home/HomeScreen\";\nimport ProfileScreen from \"./screens/profile/ProfileScreen\";\nimport CreatePost from \"./screens/create/CreatePost\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nexport default function App() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Tab.Navigator, {\n      screenOptions: function screenOptions(_ref) {\n        var route = _ref.route;\n        return {\n          tabBarIcon: function tabBarIcon(_ref2) {\n            var focused = _ref2.focused,\n                color = _ref2.color,\n                size = _ref2.size;\n            var iconName;\n\n            if (route.name === \"Home\") {\n              iconName = focused ? \"home\" : \"home-outline\";\n              size = 20;\n            } else if (route.name === \"Profile\") {\n              iconName = focused ? \"person\" : \"person-outline\";\n              size = 20;\n            } else if (route.name === \"Create\") {\n              iconName = focused ? \"add\" : \"add-outline\";\n              size = 35;\n            }\n\n            return _jsx(Ionicons, {\n              name: iconName,\n              size: size,\n              color: color\n            });\n          },\n          tabBarActiveTintColor: \"green\",\n          tabBarInactiveTintColor: \"gray\"\n        };\n      },\n      children: [_jsx(Tab.Screen, {\n        name: \"Home\",\n        component: HomeScreen,\n        options: {\n          title: \"Home \",\n          headerShown: false\n        }\n      }), _jsx(Tab.Screen, {\n        name: \"Create\",\n        component: CreatePost,\n        options: {\n          title: \"Create Post\",\n          headerShown: false\n        }\n      }), _jsx(Tab.Screen, {\n        name: \"Profile\",\n        component: ProfileScreen,\n        options: {\n          title: \"Profile\",\n          headerShown: false\n        }\n      })]\n    })\n  });\n}","map":{"version":3,"names":["NavigationContainer","createBottomTabNavigator","Ionicons","HomeScreen","ProfileScreen","CreatePost","Tab","App","route","tabBarIcon","focused","color","size","iconName","name","tabBarActiveTintColor","tabBarInactiveTintColor","title","headerShown"],"sources":["/Users/allon/native/Tutorial/frontend/App.js"],"sourcesContent":["import { NavigationContainer } from \"@react-navigation/native\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport Ionicons from \"react-native-vector-icons/Ionicons\";\n\nimport HomeScreen from \"./screens/home/HomeScreen\";\nimport ProfileScreen from \"./screens/profile/ProfileScreen\";\nimport CreatePost from \"./screens/create/CreatePost\";\n\nconst Tab = createBottomTabNavigator();\n\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <Tab.Navigator\n        screenOptions={({ route }) => ({\n          tabBarIcon: ({ focused, color, size }) => {\n            let iconName;\n\n            if (route.name === \"Home\") {\n              iconName = focused ? \"home\" : \"home-outline\";\n              size = 20;\n            } else if (route.name === \"Profile\") {\n              iconName = focused ? \"person\" : \"person-outline\";\n              size = 20;\n            } else if (route.name === \"Create\") {\n              iconName = focused ? \"add\" : \"add-outline\";\n              size = 35;\n            }\n            return <Ionicons name={iconName} size={size} color={color} />;\n          },\n          tabBarActiveTintColor: \"green\",\n          tabBarInactiveTintColor: \"gray\"\n        })}\n      >\n        <Tab.Screen\n          name=\"Home\"\n          component={HomeScreen}\n          options={{ title: \"Home \", headerShown: false }}\n        />\n        <Tab.Screen\n          name=\"Create\"\n          component={CreatePost}\n          options={{ title: \"Create Post\", headerShown: false }}\n        />\n        <Tab.Screen\n          name=\"Profile\"\n          component={ProfileScreen}\n          options={{ title: \"Profile\", headerShown: false }}\n        />\n      </Tab.Navigator>\n    </NavigationContainer>\n  );\n}\n"],"mappings":"AAAA,SAASA,mBAAT,QAAoC,0BAApC;AACA,SAASC,wBAAT,QAAyC,+BAAzC;AACA,OAAOC,QAAP;AAEA,OAAOC,UAAP;AACA,OAAOC,aAAP;AACA,OAAOC,UAAP;;;AAEA,IAAMC,GAAG,GAAGL,wBAAwB,EAApC;AAEA,eAAe,SAASM,GAAT,GAAe;EAC5B,OACE,KAAC,mBAAD;IAAA,UACE,MAAC,GAAD,CAAK,SAAL;MACE,aAAa,EAAE;QAAA,IAAGC,KAAH,QAAGA,KAAH;QAAA,OAAgB;UAC7BC,UAAU,EAAE,2BAA8B;YAAA,IAA3BC,OAA2B,SAA3BA,OAA2B;YAAA,IAAlBC,KAAkB,SAAlBA,KAAkB;YAAA,IAAXC,IAAW,SAAXA,IAAW;YACxC,IAAIC,QAAJ;;YAEA,IAAIL,KAAK,CAACM,IAAN,KAAe,MAAnB,EAA2B;cACzBD,QAAQ,GAAGH,OAAO,GAAG,MAAH,GAAY,cAA9B;cACAE,IAAI,GAAG,EAAP;YACD,CAHD,MAGO,IAAIJ,KAAK,CAACM,IAAN,KAAe,SAAnB,EAA8B;cACnCD,QAAQ,GAAGH,OAAO,GAAG,QAAH,GAAc,gBAAhC;cACAE,IAAI,GAAG,EAAP;YACD,CAHM,MAGA,IAAIJ,KAAK,CAACM,IAAN,KAAe,QAAnB,EAA6B;cAClCD,QAAQ,GAAGH,OAAO,GAAG,KAAH,GAAW,aAA7B;cACAE,IAAI,GAAG,EAAP;YACD;;YACD,OAAO,KAAC,QAAD;cAAU,IAAI,EAAEC,QAAhB;cAA0B,IAAI,EAAED,IAAhC;cAAsC,KAAK,EAAED;YAA7C,EAAP;UACD,CAf4B;UAgB7BI,qBAAqB,EAAE,OAhBM;UAiB7BC,uBAAuB,EAAE;QAjBI,CAAhB;MAAA,CADjB;MAAA,WAqBE,KAAC,GAAD,CAAK,MAAL;QACE,IAAI,EAAC,MADP;QAEE,SAAS,EAAEb,UAFb;QAGE,OAAO,EAAE;UAAEc,KAAK,EAAE,OAAT;UAAkBC,WAAW,EAAE;QAA/B;MAHX,EArBF,EA0BE,KAAC,GAAD,CAAK,MAAL;QACE,IAAI,EAAC,QADP;QAEE,SAAS,EAAEb,UAFb;QAGE,OAAO,EAAE;UAAEY,KAAK,EAAE,aAAT;UAAwBC,WAAW,EAAE;QAArC;MAHX,EA1BF,EA+BE,KAAC,GAAD,CAAK,MAAL;QACE,IAAI,EAAC,SADP;QAEE,SAAS,EAAEd,aAFb;QAGE,OAAO,EAAE;UAAEa,KAAK,EAAE,SAAT;UAAoBC,WAAW,EAAE;QAAjC;MAHX,EA/BF;IAAA;EADF,EADF;AAyCD"},"metadata":{},"sourceType":"module"}