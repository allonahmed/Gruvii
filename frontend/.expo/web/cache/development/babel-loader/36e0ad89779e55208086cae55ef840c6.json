{"ast":null,"code":"import { configureStore, combineReducers } from \"@reduxjs/toolkit\";\nimport { persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from \"redux-persist\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport reduxStore from \"./reducers/reducers\";\nimport { userStore } from \"./reducers/users\";\nvar reducers = combineReducers({\n  reduxStore: reduxStore,\n  userStore: userStore\n});\nvar persistConfig = {\n  key: \"root\",\n  storage: AsyncStorage,\n  whitelist: [\"user\"],\n  blacklist: []\n};\nvar persistedReducer = persistReducer(persistConfig, reducers);\nexport default configureStore({\n  reducer: persistedReducer,\n  middleware: function middleware(getDefaultMiddleware) {\n    return getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n      }\n    }).concat();\n  }\n});","map":{"version":3,"names":["configureStore","combineReducers","persistReducer","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","AsyncStorage","reduxStore","userStore","reducers","persistConfig","key","storage","whitelist","blacklist","persistedReducer","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","concat"],"sources":["/Users/allon/native/Gruvii/frontend/redux/store.js"],"sourcesContent":["import { configureStore, combineReducers } from \"@reduxjs/toolkit\";\nimport {\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER\n} from \"redux-persist\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nimport reduxStore from \"./reducers/reducers\";\nimport { userStore } from \"./reducers/users\";\n\nconst reducers = combineReducers({\n  reduxStore: reduxStore,\n  userStore: userStore\n});\n\n// redux-persist config\nconst persistConfig = {\n  key: \"root\",\n  storage: AsyncStorage,\n  whitelist: [\"user\"],\n  blacklist: []\n};\n\n// Combine redux-toolkit reducers with redux-persist config\nconst persistedReducer = persistReducer(persistConfig, reducers);\n\n// Create the Redux store\nexport default configureStore({\n  reducer: persistedReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n      }\n    }).concat()\n});\n"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,eAAzB,QAAgD,kBAAhD;AACA,SACEC,cADF,EAEEC,KAFF,EAGEC,SAHF,EAIEC,KAJF,EAKEC,OALF,EAMEC,KANF,EAOEC,QAPF,QAQO,eARP;AASA,OAAOC,YAAP,MAAyB,2CAAzB;AAEA,OAAOC,UAAP;AACA,SAASC,SAAT;AAEA,IAAMC,QAAQ,GAAGX,eAAe,CAAC;EAC/BS,UAAU,EAAEA,UADmB;EAE/BC,SAAS,EAAEA;AAFoB,CAAD,CAAhC;AAMA,IAAME,aAAa,GAAG;EACpBC,GAAG,EAAE,MADe;EAEpBC,OAAO,EAAEN,YAFW;EAGpBO,SAAS,EAAE,CAAC,MAAD,CAHS;EAIpBC,SAAS,EAAE;AAJS,CAAtB;AAQA,IAAMC,gBAAgB,GAAGhB,cAAc,CAACW,aAAD,EAAgBD,QAAhB,CAAvC;AAGA,eAAeZ,cAAc,CAAC;EAC5BmB,OAAO,EAAED,gBADmB;EAE5BE,UAAU,EAAE,oBAACC,oBAAD;IAAA,OACVA,oBAAoB,CAAC;MACnBC,iBAAiB,EAAE;QACjBC,cAAc,EAAE,CAACpB,KAAD,EAAQC,SAAR,EAAmBC,KAAnB,EAA0BC,OAA1B,EAAmCC,KAAnC,EAA0CC,QAA1C;MADC;IADA,CAAD,CAApB,CAIGgB,MAJH,EADU;EAAA;AAFgB,CAAD,CAA7B"},"metadata":{},"sourceType":"module"}